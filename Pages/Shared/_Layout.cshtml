@using xSite;
@using xSite.Extensions;
@inject ISiteManager SiteManager;
@{
    var _siteInfo = (SiteInfo)ViewData["SiteInfo"];
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <meta name="description" content="@ViewData["Description"]">
    <meta name="author" content="@ViewData["Author"]">
    <link rel="icon" href="@_siteInfo.FavIconUrl">
    <title>@ViewData["Title"]</title>

    <link rel="stylesheet" href="~/css/style.css" />
</head>
<body>

    <header class="site-header">

        <div class="wrapper">
            <a class="site-title" rel="author" href="/">@_siteInfo.Title</a>

            @{
                var menu = await SiteManager.GetMenuByLocationAsync("Primary", true);
                if (menu != null) {
                    <nav class="site-nav">
                        <input type="checkbox" id="nav-trigger" class="nav-trigger" />
                        <label for="nav-trigger">
                            <span class="menu-icon">
                                <svg viewBox="0 0 18 15" width="18px" height="15px">
                                    <path d="M18,1.484c0,0.82-0.665,1.484-1.484,1.484H1.484C0.665,2.969,0,2.304,0,1.484l0,0C0,0.665,0.665,0,1.484,0 h15.032C17.335,0,18,0.665,18,1.484L18,1.484z M18,7.516C18,8.335,17.335,9,16.516,9H1.484C0.665,9,0,8.335,0,7.516l0,0 c0-0.82,0.665-1.484,1.484-1.484h15.032C17.335,6.031,18,6.696,18,7.516L18,7.516z M18,13.516C18,14.335,17.335,15,16.516,15H1.484 C0.665,15,0,14.335,0,13.516l0,0c0-0.82,0.665-1.483,1.484-1.483h15.032C17.335,12.031,18,12.695,18,13.516L18,13.516z" />
                                </svg>
                            </span>
                        </label>

                        <div class="trigger">
                            @foreach (var menuItem in menu.MenuItems) {
                                <a class="page-link" href="@menuItem.Target">@menuItem.Label</a>
                            }
                        </div>
                    </nav>
                }
            }
        </div>
    </header>

    <main class="page-content" aria-label="Content">
        <div class="wrapper">
            @RenderBody()
        </div>
    </main>

    <footer class="site-footer h-card">
        <data class="u-url" href="/"></data>
        @*href="{{ "/" | relative_url }}"*@

        <div class="wrapper">

            <div class="footer-col-wrapper">
                <div class="footer-col one-half">
                    <h2 class="footer-heading">@_siteInfo.Title</h2>
                    <ul class="contact-list">
                        <li class="p-name">
                            @_siteInfo.Author
                        </li>
                        <li><a class="u-email" href="mailto:@_siteInfo.AuthorEmail">@_siteInfo.AuthorEmail</a></li>
                    </ul>
                </div>

                <div class="footer-col one-half">
                    <p>@_siteInfo.Description</p>
                </div>

                @{
                    var socialMenu = await SiteManager.GetMenuByLocationAsync("Social");
                    if (socialMenu != null) { 
                        <div class="social-links">
                            <ul class="social-media-list">
                                @foreach (var menuItem in socialMenu.MenuItems) {
                                    var svgHref = "/minima-social-icons.svg#{0}";
                                    if (menuItem.IsGitHubLink()) {
                                        svgHref = string.Format(svgHref, "github");
                                    } else if (menuItem.IsLinkedInLink()) {
                                        svgHref = string.Format(svgHref, "linkedin");
                                    } else if (menuItem.IsFacebookLink()) {
                                        svgHref = string.Format(svgHref, "facebook");
                                    } else if (menuItem.IsTwitterLink()) {
                                        svgHref = string.Format(svgHref, "twitter");
                                    } else if (menuItem.IsEmailLink()) {
                                        svgHref = string.Format(svgHref, "envelope");
                                    } else if (menuItem.IsInstagramLink()) {
                                        svgHref = string.Format(svgHref, "instagram");
                                    } else if (menuItem.IsRssFeedLink()) {
                                        svgHref = string.Format(svgHref, "rss");
                                    } else {
                                        continue;
                                    }
                                    <li>
                                        <a href="@menuItem.Target" title="@menuItem.Label">
                                            <svg class="svg-icon grey">
                                                <use xlink:href="@svgHref"></use>
                                            </svg>
                                        </a>
                                    </li>
                                }

                            </ul>
                        </div>
                    }
                }
            </div>

        </div>

    </footer>

</body>
</html>
