@page
@using xSite
@model xSiteModel<Post>
@inject ISiteManager _siteManager

@{
    var siteInfo = await _siteManager.GetSiteInfoAsync();
    ViewData["Title"] = Model.Item.Title + " - " + siteInfo.Title;
    ViewData["Description"] = Model.Item.Excerpt;
    ViewData["Author"] = Model.Item.Author.Name;
    ViewData["SiteInfo"] = siteInfo;
}

<article class="post h-entry" itemscope itemtype="http://schema.org/BlogPosting">

    <header class="post-header">
        <h1 class="post-title p-name" itemprop="name headline">@Model.Item.Title</h1>
        <p class="post-meta">
            <time class="dt-published" datetime="{{ page.date | date_to_xmlschema }}" itemprop="datePublished">
                @Model.Item.PublishedOn.Value.ToString("MMMM d, yyyy")
            </time>
            • <span itemprop="author" itemscope itemtype="http://schema.org/Person"><span class="p-author h-card" itemprop="name">@Model.Item.Author.Name</span></span>
        </p>
    </header>

    <div class="post-content e-content" itemprop="articleBody">
        @Html.Raw(@Model.Item.Body)
    </div>

    @{
        var postUrl = _siteManager.GetUrl(Model.Item);
        <a class="u-url" href="@postUrl" hidden></a>
    }
</article>